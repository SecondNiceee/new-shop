/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    categories: Category;
    products: Product;
    carts: Cart;
    addresses: Address;
    orders: Order;
    reviews: Review;
    favorites: Favorite;
    pages: Page;
    blogs: Blog;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    carts: CartsSelect<false> | CartsSelect<true>;
    addresses: AddressesSelect<false> | AddressesSelect<true>;
    orders: OrdersSelect<false> | OrdersSelect<true>;
    reviews: ReviewsSelect<false> | ReviewsSelect<true>;
    favorites: FavoritesSelect<false> | FavoritesSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    blogs: BlogsSelect<false> | BlogsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    'site-settings': SiteSetting;
  };
  globalsSelect: {
    'site-settings': SiteSettingsSelect<false> | SiteSettingsSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: unknown;
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  /**
   * Phone number for delivery contact
   */
  phone?: string | null;
  role?: ('admin' | 'user' | 'manager') | null;
  /**
   * Выберите коллекции, к которым пользователь будет иметь доступ. Если не выбрано ничего, доступ ко всем коллекциям (только для админов).
   */
  accessCollections?:
    | ('users' | 'categories' | 'products' | 'media' | 'orders' | 'reviews' | 'pages' | 'blogs')[]
    | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  _verified?: boolean | null;
  _verificationToken?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  /**
   * Уникальное значение (английское) для категории. Используется внутри кода. ДОЛЖНО БЫТЬ ОДНО СЛОВО! НЕЛЬЗЯ ПРОБЕЛОВ
   */
  value: string;
  title: string;
  /**
   * Если не выбрано — это основная категория
   */
  parent?: (number | null) | Category;
  /**
   * Иконка нужна только для основных категорий
   */
  icon?: (number | null) | Media;
  /**
   * Загрузите обложку для подкатегории (видны в каталоге)
   */
  coverImage?: (number | null) | Media;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  title: string;
  price: number;
  discount?: {
    isActive?: boolean | null;
    type?: ('percentage' | 'fixed') | null;
    /**
     * Для процентной скидки - число от 0.01 до 99.99. Для фиксированной - сумма в рублях (не более 99% от цены товара).
     */
    value?: number | null;
    /**
     * Оставьте пустым для немедленного начала. Дата не может быть в прошлом.
     */
    startDate?: string | null;
    /**
     * Оставьте пустым для бессрочной скидки. Должна быть позже даты начала.
     */
    endDate?: string | null;
    /**
     * Краткое описание акции или причины скидки (до 200 символов)
     */
    description?: string | null;
  };
  weight: {
    value: number;
    unit: 'кг' | 'г' | 'л' | 'мл';
  };
  /**
   * Выберите только категорию, без подкатегорий
   */
  category: (number | Category)[];
  /**
   * Выберите подкатегорию
   */
  subCategory: number | Category;
  /**
   * Загрузите основное изображение продукта
   */
  image: number | Media;
  description?: string | null;
  storageConditions?: string | null;
  ingredients?: string | null;
  recommendedProducts?: (number | Product)[] | null;
  nutritionalValue?: {
    calories?: number | null;
    proteins?: number | null;
    carbohydrates?: number | null;
    fats?: number | null;
    fiber?: number | null;
  };
  /**
   * Обновляется автоматически при добавлении отзыва
   */
  averageRating?: number | null;
  reviewsCount?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts".
 */
export interface Cart {
  id: number;
  /**
   * Cart owner (auto-assigned)
   */
  user: number | User;
  /**
   * Items in cart
   */
  items?:
    | {
        product: number | Product;
        quantity: number;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses".
 */
export interface Address {
  id: number;
  /**
   * Address owner (auto-assigned)
   */
  user?: (number | null) | User;
  /**
   * Полный адрес улицы
   */
  street: string;
  apartment?: string | null;
  entrance?: string | null;
  floor?: string | null;
  comment?: string | null;
  coordinates?: {
    lat?: number | null;
    lng?: number | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders".
 */
export interface Order {
  id: number;
  /**
   * Unique order identifier (auto-generated)
   */
  orderNumber: string;
  /**
   * Order owner (auto-assigned)
   */
  user: number | User;
  status: 'pending' | 'preparing' | 'delivering' | 'delivered' | 'cancelled';
  /**
   * Order items
   */
  items: {
    product: number | Product;
    quantity: number;
    /**
     * Price at the time of order
     */
    price: number;
    id?: string | null;
  }[];
  deliveryAddress: {
    address: string;
    apartment?: string | null;
    entrance?: string | null;
    floor?: string | null;
    comment?: string | null;
  };
  /**
   * Customer phone number
   */
  customerPhone: string;
  /**
   * Total order amount including delivery
   */
  totalAmount: number;
  /**
   * Delivery fee
   */
  deliveryFee: number;
  /**
   * Additional notes or comments
   */
  notes?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews".
 */
export interface Review {
  id: number;
  product: number | Product;
  user: number | User;
  rating: number;
  comment?: string | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favorites".
 */
export interface Favorite {
  id: number;
  user: number | User;
  product: number | Product;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  /**
   * Уникальный slug, не менять!
   */
  slug: string;
  /**
   * Название странички (в поисковике будет)
   */
  title: string;
  /**
   * Описание, которое в поисковике.
   */
  description: string;
  /**
   * Это контент страницы
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs".
 */
export interface Blog {
  id: number;
  /**
   * SLUG на англ.языке без пробелов, для пути странички
   */
  slug: string;
  /**
   * Заголовок для SEO
   */
  title: string;
  /**
   * Описание для SEO
   */
  description: string;
  /**
   * Фоновое изображение для блога(на страничке выбора блогов)
   */
  background: number | Media;
  /**
   * Контент
   */
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'carts';
        value: number | Cart;
      } | null)
    | ({
        relationTo: 'addresses';
        value: number | Address;
      } | null)
    | ({
        relationTo: 'orders';
        value: number | Order;
      } | null)
    | ({
        relationTo: 'reviews';
        value: number | Review;
      } | null)
    | ({
        relationTo: 'favorites';
        value: number | Favorite;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'blogs';
        value: number | Blog;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  phone?: T;
  role?: T;
  accessCollections?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  _verified?: T;
  _verificationToken?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  value?: T;
  title?: T;
  parent?: T;
  icon?: T;
  coverImage?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  title?: T;
  price?: T;
  discount?:
    | T
    | {
        isActive?: T;
        type?: T;
        value?: T;
        startDate?: T;
        endDate?: T;
        description?: T;
      };
  weight?:
    | T
    | {
        value?: T;
        unit?: T;
      };
  category?: T;
  subCategory?: T;
  image?: T;
  description?: T;
  storageConditions?: T;
  ingredients?: T;
  recommendedProducts?: T;
  nutritionalValue?:
    | T
    | {
        calories?: T;
        proteins?: T;
        carbohydrates?: T;
        fats?: T;
        fiber?: T;
      };
  averageRating?: T;
  reviewsCount?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "carts_select".
 */
export interface CartsSelect<T extends boolean = true> {
  user?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "addresses_select".
 */
export interface AddressesSelect<T extends boolean = true> {
  user?: T;
  street?: T;
  apartment?: T;
  entrance?: T;
  floor?: T;
  comment?: T;
  coordinates?:
    | T
    | {
        lat?: T;
        lng?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "orders_select".
 */
export interface OrdersSelect<T extends boolean = true> {
  orderNumber?: T;
  user?: T;
  status?: T;
  items?:
    | T
    | {
        product?: T;
        quantity?: T;
        price?: T;
        id?: T;
      };
  deliveryAddress?:
    | T
    | {
        address?: T;
        apartment?: T;
        entrance?: T;
        floor?: T;
        comment?: T;
      };
  customerPhone?: T;
  totalAmount?: T;
  deliveryFee?: T;
  notes?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "reviews_select".
 */
export interface ReviewsSelect<T extends boolean = true> {
  product?: T;
  user?: T;
  rating?: T;
  comment?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "favorites_select".
 */
export interface FavoritesSelect<T extends boolean = true> {
  user?: T;
  product?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "blogs_select".
 */
export interface BlogsSelect<T extends boolean = true> {
  slug?: T;
  title?: T;
  description?: T;
  background?: T;
  content?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * Основные настройки сайта и контактная информация. Если вы ставите изображение (в слайдере) сразу с текстом, то не добавляйте просто текст. Но будьте аккуратны, проверьте как ваш текст (на картинке) выглядит на мобилках и на пк.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings".
 */
export interface SiteSetting {
  id: number;
  /**
   * Изображения для слайдера на главной странице
   */
  slider?: {
    /**
     * Добавьте изображения для слайдера
     */
    slides?:
      | {
          /**
           * Изображение для слайда (рекомендуемый размер: 1280x200px)
           */
          image: number | Media;
          /**
           * Основной заголовок слайда
           */
          title?: string | null;
          /**
           * Дополнительный текст под заголовком
           */
          subtitle?: string | null;
          /**
           * Выберите цвет заголовка для лучшей читаемости
           */
          titleColor?: ('black' | 'white' | 'gray' | 'red' | 'blue' | 'green' | 'yellow') | null;
          /**
           * Выберите цвет подзаголовка для лучшей читаемости
           */
          subtitleColor?: ('black' | 'white' | 'gray' | 'red' | 'blue' | 'green' | 'yellow') | null;
          /**
           * Уровень затемнения изображения для лучшей читаемости текста
           */
          imageOverlay?: ('none' | 'light' | 'medium' | 'dark') | null;
          link?: string | null;
          id?: string | null;
        }[]
      | null;
  };
  /**
   * Основная информация о вашей компании
   */
  companyInfo: {
    /**
     * Полное юридическое название компании
     */
    legalName: string;
    /**
     * Год основания компании
     */
    year: number;
    /**
     * Основной контактный телефон компании
     */
    phone: string;
  };
  /**
   * Настройки минимальной суммы заказа и стоимости доставки
   */
  orderSettings: {
    /**
     * Минимальная сумма заказа для оформления
     */
    minOrderAmount: number;
    /**
     * Стоимость доставки заказа
     */
    deliveryFee: number;
  };
  /**
   * Ссылки на ваши социальные сети и мессенджеры
   */
  socialLinks: {
    /**
     * Контактный email адрес
     */
    email?: string | null;
    /**
     * Ссылка на WhatsApp (номер телефона или ссылка)
     */
    whatsApp?: string | null;
    /**
     * Ссылка на страницу ВКонтакте
     */
    vk?: string | null;
    /**
     * Ссылка на Telegram канал или бот
     */
    telegram?: string | null;
    /**
     * Ссылка на YouTube канал
     */
    youtube?: string | null;
    /**
     * Ссылка на Instagram профиль
     */
    instagram?: string | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "site-settings_select".
 */
export interface SiteSettingsSelect<T extends boolean = true> {
  slider?:
    | T
    | {
        slides?:
          | T
          | {
              image?: T;
              title?: T;
              subtitle?: T;
              titleColor?: T;
              subtitleColor?: T;
              imageOverlay?: T;
              link?: T;
              id?: T;
            };
      };
  companyInfo?:
    | T
    | {
        legalName?: T;
        year?: T;
        phone?: T;
      };
  orderSettings?:
    | T
    | {
        minOrderAmount?: T;
        deliveryFee?: T;
      };
  socialLinks?:
    | T
    | {
        email?: T;
        whatsApp?: T;
        vk?: T;
        telegram?: T;
        youtube?: T;
        instagram?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}